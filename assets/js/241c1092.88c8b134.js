"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[90025],{3905:(e,t,a)=>{a.d(t,{Zo:()=>h,kt:()=>u});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=n.createContext({}),p=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},h=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,h=o(e,["components","mdxType","originalType","parentName"]),c=p(a),u=r,m=c["".concat(i,".").concat(u)]||c[u]||d[u]||s;return a?n.createElement(m,l(l({ref:t},h),{},{components:a})):n.createElement(m,l({ref:t},h))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,l=new Array(s);l[0]=c;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<s;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},6990:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const s={},l="NHLAPI - SQL and Python Assignment",o={unversionedId:"assignments/florida-panthers/README",id:"assignments/florida-panthers/README",title:"NHLAPI - SQL and Python Assignment",description:"Objective",source:"@site/docs/11-assignments/florida-panthers/README.md",sourceDirName:"11-assignments/florida-panthers",slug:"/assignments/florida-panthers/",permalink:"/docs/assignments/florida-panthers/",draft:!1,tags:[],version:"current",lastUpdatedBy:"sparsh",lastUpdatedAt:1681047270,formattedLastUpdatedAt:"Apr 9, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Cyclistic Case Study",permalink:"/docs/assignments/cyclistic-analysis/"},next:{title:"HealthVerity",permalink:"/docs/assignments/healthverity/"}},i={},p=[{value:"Objective",id:"objective",level:2},{value:"Python",id:"python",level:2},{value:"SQL",id:"sql",level:2}],h={toc:p};function d(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"nhlapi---sql-and-python-assignment"},"NHLAPI - SQL and Python Assignment"),(0,r.kt)("h2",{id:"objective"},"Objective"),(0,r.kt)("p",null,"Use the publicly accessible portions of the NHL API (",(0,r.kt)("a",{parentName:"p",href:"https://gitlab.com/dword4/nhlapi/-/blob/master/stats-api.md"},"https://gitlab.com/dword4/nhlapi/-/blob/master/stats-api.md"),") to query for historical Florida Panthers statistics, createtables consistent with instructions, and then use SQL to write queries and answer questions using those tables."),(0,r.kt)("h2",{id:"python"},"Python"),(0,r.kt)("p",null,"A. Make sure you have the necessary packages installed, or similar."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pip install pandas\npip install requests\n")),(0,r.kt)("p",null,"B. Create an .ipynb file and import them."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import requests\nimport pandas as pd\n")),(0,r.kt)("p",null,"C. Write one or more function(s) that queries the /teams and the /people endpoints for all Panthers players, starting in the 2014-15 season, and ending in the 2021-22 season. Should return a pandas data frame where every row is an individual player\u2019s season (only seasons where they played for the Panthers), where player id is the first field, season is the second, then descriptive player information (age, height, weight), and finally all of their season averages/totals playing for the Panthers. Calculate their age during that season using this logic: ",(0,r.kt)("a",{parentName:"p",href:"https://www.hockey-reference.com/about/glossary.html"},"https://www.hockey-reference.com/about/glossary.html")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def create_panthers_players_table():\n\n    return panthers_players_table\n")),(0,r.kt)("p",null,"D. Write one or more function(s) that queries the /schedule and /game endpoints for all Panthers games, starting in the 2014-15 season, and ending in the 2021-22 season. Should return a data frame where every row is an individual game, with the game id as the first field, whether the Panthers were home or away as the second field, the result for the Panthers as the third (win, loss, overtime loss), and finally the team stats for both the Panthers and their opponent."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def create_panthers_game_boxscores_table():\n  \n    return panthers_game_boxscores_table\n")),(0,r.kt)("p",null,"E. Write one or more function(s) that queries the /game endpoint for every Panthers player\u2019s individual game box score, using the game id\u2019s you gathered from above. Should return a data frame where every row is a Panthers player that played in the game, where\nthe first two fields are player id and game id, and the rest of the fields are all of the player\u2019s individual statistics for the game."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def create_panthers_player_boxscores_table():\n\n    return panthers_player_boxscores_table\n")),(0,r.kt)("p",null,"F. Write all final data frames as csv\u2019s to a local directory to attach later."),(0,r.kt)("h2",{id:"sql"},"SQL"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"A.")," Make sure you have pandas sql installed"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pip install pandasql\n")),(0,r.kt)("p",null,"B. Import sqldf from the pandas sql package"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from pandasql import sqldf\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"C.")," Create a quick function to facilitate the queries"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"pysqldf = lambda q: sqldf(q, globals())\n")),(0,r.kt)("p",null,"D. Load in your three tables and give them clearly defined names. Answer questions in the following format"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'q = """\n\n"""\nq1_answer = pysqldf(q)\nprint(q1_answer)\n')),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Which five players have played the most full seasons for the Panthers in the time frame we pulled?"),(0,r.kt)("li",{parentName:"ol"},"Which player had the highest plus-minus in an individual game and what was the result for the Panthers?"),(0,r.kt)("li",{parentName:"ol"},"Who were the youngest players to play for the Panthers in this time period, that were also on the team in\n2021-22, and what were the first games they played for the Panthers?"),(0,r.kt)("li",{parentName:"ol"},"Who had the most total penalty minutes in a season for the panthers, and what season did this take place\nin?"),(0,r.kt)("li",{parentName:"ol"},"Rank Panthers seasons by number of total home shutouts.")))}d.isMDXComponent=!0}}]);