"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[60029],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var o=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=o.createContext({}),l=function(e){var t=o.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return o.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(r),f=n,u=d["".concat(c,".").concat(f)]||d[f]||m[f]||a;return r?o.createElement(u,i(i({ref:t},p),{},{components:r})):o.createElement(u,i({ref:t},p))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var l=2;l<a;l++)i[l]=r[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},54583:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var o=r(87462),n=(r(67294),r(3905));const a={},i="Amazon Kinesis Data Firehose",s={unversionedId:"capstones/smartcity/firehose/README",id:"capstones/smartcity/firehose/README",title:"Amazon Kinesis Data Firehose",description:"Description of files",source:"@site/docs/12-capstones/smartcity/02-firehose/README.md",sourceDirName:"12-capstones/smartcity/02-firehose",slug:"/capstones/smartcity/firehose/",permalink:"/docs/capstones/smartcity/firehose/",draft:!1,tags:[],version:"current",lastUpdatedBy:"sparsh",lastUpdatedAt:1681047270,formattedLastUpdatedAt:"Apr 9, 2023",frontMatter:{}},c={},l=[{value:"Description of files",id:"description-of-files",level:2}],p={toc:l};function m(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,o.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"amazon-kinesis-data-firehose"},"Amazon Kinesis Data Firehose"),(0,n.kt)("h2",{id:"description-of-files"},"Description of files"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"station_addresses.csv - Contains the address data for SmartCity bike stations in csv format."),(0,n.kt)("li",{parentName:"ol"},"loadDynamoDBStationAddresses.py - Python code to load the address data to a Amazon DynamoDB table."),(0,n.kt)("li",{parentName:"ol"},"TrustPolicyForLambda.json - Contains the trust policy for the role used with the Lambda transform in the KDF delivery stream."),(0,n.kt)("li",{parentName:"ol"},"KDFSmartCityLambdaPolicy.json - Contains the IAM policy for the role used with the Lambda transform in the KDF delivery stream."),(0,n.kt)("li",{parentName:"ol"},"KDFLookupAddressTransform.py - The Lambda function to lookup and transform incoming data in KDF to include station address data."),(0,n.kt)("li",{parentName:"ol"},"CreateLambdaKDFLookupAddressTransform.json - Contains the configuration to create the Lambda function."),(0,n.kt)("li",{parentName:"ol"},"SmartCityGlueTable.json - Contains the configuration to create the Glue table, whose schema is used by KDF for data format conversion to parquet."),(0,n.kt)("li",{parentName:"ol"},"TrustPolicyForFirehose.json - Contains the trust policy for the role used with KDF."),(0,n.kt)("li",{parentName:"ol"},"KDFSmartCityDeliveryStreamPolicy.json - Contains the IAM policy for the role used with KDF."),(0,n.kt)("li",{parentName:"ol"},"KDFCreateDeliveryStreamSmartCityBikes.json - Contains the configuration to create the KDF delivery stream.")))}m.isMDXComponent=!0}}]);