"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[75145],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>u});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),d=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=d(a),u=n,b=m["".concat(s,".").concat(u)]||m[u]||p[u]||l;return a?r.createElement(b,o(o({ref:t},c),{},{components:a})):r.createElement(b,o({ref:t},c))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,o=new Array(l);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var d=2;d<l;d++)o[d]=a[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},40286:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>d});var r=a(87462),n=(a(67294),a(3905));const l={},o="AirBnB Postgres Datamodel",i={unversionedId:"data-modeling/lab-airbnb-postgres-datamodel/README",id:"data-modeling/lab-airbnb-postgres-datamodel/README",title:"AirBnB Postgres Datamodel",description:"Objective",source:"@site/docs/04-data-modeling/lab-airbnb-postgres-datamodel/README.md",sourceDirName:"04-data-modeling/lab-airbnb-postgres-datamodel",slug:"/data-modeling/lab-airbnb-postgres-datamodel/",permalink:"/docs/data-modeling/lab-airbnb-postgres-datamodel/",draft:!1,tags:[],version:"current",lastUpdatedBy:"sparsh",lastUpdatedAt:1681047270,formattedLastUpdatedAt:"Apr 9, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Inmon versus the Kimball data model",permalink:"/docs/data-modeling/inmon-vs-kimball"},next:{title:"Cars Data Modeling MySQL",permalink:"/docs/data-modeling/lab-cars-mysql-datamodel/datamodel-cars"}},s={},d=[{value:"Objective",id:"objective",level:2},{value:"Dataset",id:"dataset",level:2},{value:"Data Ingestion",id:"data-ingestion",level:2},{value:"Data Model",id:"data-model",level:2}],c={toc:d};function p(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"airbnb-postgres-datamodel"},"AirBnB Postgres Datamodel"),(0,n.kt)("h2",{id:"objective"},"Objective"),(0,n.kt)("p",null,"Build a Star Schema based Data Model in Postgres on the AirBnB dataset"),(0,n.kt)("h2",{id:"dataset"},"Dataset"),(0,n.kt)("p",null,"Dataset consist of 6 different data files in CSV format, listed below:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"calendar.csv"),(0,n.kt)("li",{parentName:"ul"},"listings.csv"),(0,n.kt)("li",{parentName:"ul"},"listings_details.csv"),(0,n.kt)("li",{parentName:"ul"},"neighbourhoods.csv"),(0,n.kt)("li",{parentName:"ul"},"reviews.csv"),(0,n.kt)("li",{parentName:"ul"},"reviews_details.csv")),(0,n.kt)("h2",{id:"data-ingestion"},"Data Ingestion"),(0,n.kt)("p",null,"Steps for uploading one csv into a table inside a database"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Create the Database if not created"),(0,n.kt)("li",{parentName:"ol"},"Connect to the Database"),(0,n.kt)("li",{parentName:"ol"},"Create the Table using the below sql command inside the database server",(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre"},"CREATE TABLE tableName (var1 varType, var2, varType...);\n"))),(0,n.kt)("li",{parentName:"ol"},"Insert the data into the Table row by row using the following SQL command",(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre"},"INSERT INTO tableName (var1, var2 ...) values (val1, val2...);\n")))),(0,n.kt)("p",null,"Repeat the above steps for all the 6 files that I have. Below are the row and column counts of two major CSV file"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"listings_details.csv ==> 20,000 ROWS and 90 Column"),(0,n.kt)("li",{parentName:"ul"},"reviews_details.csv ==> 413,000 ROWS and 8 Columns\n")),(0,n.kt)("h2",{id:"data-model"},"Data Model"),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/62965911/214234180-d970394c-91bf-4012-b59f-47b09fd8b14e.png",alt:null})))}p.isMDXComponent=!0}}]);