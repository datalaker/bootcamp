"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[23774],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>h});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var c=r.createContext({}),l=function(e){var t=r.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(a),h=n,m=d["".concat(c,".").concat(h)]||d[h]||u[h]||o;return a?r.createElement(m,i(i({ref:t},p),{},{components:a})):r.createElement(m,i({ref:t},p))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var l=2;l<o;l++)i[l]=a[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},16851:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=a(87462),n=(a(67294),a(3905));const o={},i="API HackerNews Github",s={unversionedId:"extraction/api/lab-hackernews-git-api/README",id:"extraction/api/lab-hackernews-git-api/README",title:"API HackerNews Github",description:"GitHub API",source:"@site/docs/05-extraction/api/lab-hackernews-git-api/README.md",sourceDirName:"05-extraction/api/lab-hackernews-git-api",slug:"/extraction/api/lab-hackernews-git-api/",permalink:"/docs/extraction/api/lab-hackernews-git-api/",draft:!1,tags:[],version:"current",lastUpdatedBy:"sparsh",lastUpdatedAt:1681047270,formattedLastUpdatedAt:"Apr 9, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Data Extraction from APIs",permalink:"/docs/extraction/api/"},next:{title:"Extract data from multiple sources and load into database",permalink:"/docs/extraction/api/lab-scoota/"}},c={},l=[{value:"GitHub API",id:"github-api",level:2},{value:"The Hacker News API",id:"the-hacker-news-api",level:2}],p={toc:l};function u(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"api-hackernews-github"},"API HackerNews Github"),(0,n.kt)("h2",{id:"github-api"},"GitHub API"),(0,n.kt)("p",null,"In this lab, you\u2019ll learn how to write a self-contained program that generates a visualization based on data that it retrieves. Your program will use a web application programming interface (API) to automatically request specific information from a website\u2014rather than entire pages\u2014and then use that information to generate a visualization. Because programs written like this will always use current data to generate a visualization, even when that data might be rapidly changing, it will always be up to date."),(0,n.kt)("p",null,"We\u2019ll base our visualization on information from GitHub, a site that allows programmers to collaborate on coding projects. We\u2019ll use GitHub\u2019s API to request information about Python projects on the site, and then generate an interactive visualization of the relative popularity of these projects using Plotly."),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/62965911/215260573-dee5564c-0c3d-4a94-b259-e9f112d98c12.png",alt:"repo-plot"})),(0,n.kt)("h2",{id:"the-hacker-news-api"},"The Hacker News API"),(0,n.kt)("p",null,"To explore how to use API calls on other sites, let\u2019s take a quick look at Hacker News (",(0,n.kt)("a",{parentName:"p",href:"http://news.ycombinator.com/"},"http://news.ycombinator.com/"),"). On Hacker News, people share articles about programming and technology, and engage in lively discussions about those articles. The Hacker News API provides access to data about all submissions and comments on the site, and you can use the API without having to register for a key."))}u.isMDXComponent=!0}}]);