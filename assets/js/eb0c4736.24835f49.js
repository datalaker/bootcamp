"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[33920],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),i=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=i(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=i(n),f=o,m=d["".concat(c,".").concat(f)]||d[f]||u[f]||a;return n?r.createElement(m,s(s({ref:t},p),{},{components:n})):r.createElement(m,s({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,s[1]=l;for(var i=2;i<a;i++)s[i]=n[i];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},10384:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>i});var r=n(87462),o=(n(67294),n(3905));const a={},s="Snowflake Getting Started",l={unversionedId:"storage/lab-snowflake-getting-started/README",id:"storage/lab-snowflake-getting-started/README",title:"Snowflake Getting Started",description:"Connect to Snowflake using Python",source:"@site/docs/02-storage/lab-snowflake-getting-started/README.md",sourceDirName:"02-storage/lab-snowflake-getting-started",slug:"/storage/lab-snowflake-getting-started/",permalink:"/docs/storage/lab-snowflake-getting-started/",draft:!1,tags:[],version:"current",lastUpdatedBy:"sparsh",lastUpdatedAt:1681047270,formattedLastUpdatedAt:"Apr 9, 2023",frontMatter:{}},c={},i=[{value:"Connect to Snowflake using Python",id:"connect-to-snowflake-using-python",level:2},{value:"Transformation in Local compute vs in Warehouse",id:"transformation-in-local-compute-vs-in-warehouse",level:2}],p={toc:i};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"snowflake-getting-started"},"Snowflake Getting Started"),(0,o.kt)("h2",{id:"connect-to-snowflake-using-python"},"Connect to Snowflake using Python"),(0,o.kt)("p",null,"Installation:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"pip install --upgrade snowflake-connector-python snowflake-connector-python[pandas]\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"import snowflake.connector\n\nACCOUNT = ''\nUSERID = ''\nPASSWORD = ''\nWAREHOUSE = ''\nDATABASE = ''\nSCHEMA = ''\n\nconn = snowflake.connector.connect(\n                user=USERID,\n                password=PASSWORD,\n                account=ACCOUNT,\n                warehouse=WAREHOUSE,\n                database=DATABASE,\n                schema=SCHEMA\n                )\ncurs = conn.cursor()\nresult = curs.execute(\"SELECT * FROM CUSTOMER LIMIT 10\")\n\nresult.fetchall()\nresult.fetch_pandas_all()\n")),(0,o.kt)("h2",{id:"transformation-in-local-compute-vs-in-warehouse"},"Transformation in Local compute vs in Warehouse"),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Local compute is comparative to an ETL process and Snowflake compute is comparative to an ELT process.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Local compute")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"import pandas as pd\n\n%%time\nquery = \"SELECT * FROM LINEITEM\"\nlineitem_df = pd.read_sql(query, conn)\nlineitem_df.groupby('L_SHIPMODE')['L_SHIPINSTRUCT'].count().plot()\n")),(0,o.kt)("p",null,"**Compute in Snowflake"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-py"},"import pandas as pd\n\n%%time\nquery = \"SELECT L_SHIPMODE, COUNT(*) FROM LINEITEM GROUP BY L_SHIPMODE;\"\nlineitem_df = pd.read_sql(query, conn)\nlineitem_df.set_index('L_SHIPMODE').plot()\n")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Local compute would take ~1 min because the main bottleneck is data transfer of 6M+ records from warehouse to staging/compute environment. In contrast to this, Snowflake compute would take 1-2 secs only because we removed this bottleneck and the data is being transformed directly in the warehouse.")))}u.isMDXComponent=!0}}]);