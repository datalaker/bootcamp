"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[68834],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>m});var o=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,o)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,o,n=function(e,t){if(null==e)return{};var a,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)a=i[o],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)a=i[o],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=o.createContext({}),u=function(e){var t=o.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},p=function(e){var t=u(e.components);return o.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},c=o.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(a),m=n,h=c["".concat(s,".").concat(m)]||c[m]||d[m]||i;return a?o.createElement(h,r(r({ref:t},p),{},{components:a})):o.createElement(h,r({ref:t},p))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,r=new Array(i);r[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,r[1]=l;for(var u=2;u<i;u++)r[u]=a[u];return o.createElement.apply(null,r)}return o.createElement.apply(null,a)}c.displayName="MDXCreateElement"},82049:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var o=a(87462),n=(a(67294),a(3905));const i={},r="Citi Bike Trip Histories",l={unversionedId:"capstones/citibike-trip-histories/README",id:"capstones/citibike-trip-histories/README",title:"Citi Bike Trip Histories",description:"The goal of this capstone is to build an end-to-end data pipeline:",source:"@site/docs/12-capstones/citibike-trip-histories/README.md",sourceDirName:"12-capstones/citibike-trip-histories",slug:"/capstones/citibike-trip-histories/",permalink:"/docs/capstones/citibike-trip-histories/",draft:!1,tags:[],version:"current",lastUpdatedBy:"sparsh",lastUpdatedAt:1681047270,formattedLastUpdatedAt:"Apr 9, 2023",frontMatter:{}},s={},u=[{value:"Problem description",id:"problem-description",level:2},{value:"Dataset",id:"dataset",level:2},{value:"Technologies",id:"technologies",level:2},{value:"Project architecture",id:"project-architecture",level:2},{value:"Tutorial",id:"tutorial",level:2},{value:"1. Pre-requisites",id:"1-pre-requisites",level:3},{value:"2. Google Cloud Platform",id:"2-google-cloud-platform",level:3},{value:"3. Terraform",id:"3-terraform",level:3},{value:"4. Airflow",id:"4-airflow",level:3},{value:"Setup",id:"setup",level:4},{value:"Running DAGs",id:"running-dags",level:4},{value:"5. DBT",id:"5-dbt",level:3},{value:"6. Google Data Studio",id:"6-google-data-studio",level:3}],p={toc:u};function d(e){let{components:t,...i}=e;return(0,n.kt)("wrapper",(0,o.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"citi-bike-trip-histories"},"Citi Bike Trip Histories"),(0,n.kt)("p",null,"The goal of this capstone is to build an end-to-end data pipeline:"),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/62965911/215285353-2806974e-59db-4533-9c7b-d6ac33fe9756.png",alt:"arch"})),(0,n.kt)("h2",{id:"problem-description"},"Problem description"),(0,n.kt)("p",null,"The project is related to Citi Bike trips. Where do Citi Bikers ride? When do they ride? How far do they go? Which stations are most popular? What days of the week are most rides taken on? The provided data will help you discover the answers to these questions and more."),(0,n.kt)("p",null,"The key goals of the project are:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"develop a data pipeline that will help to organize data processing in a batch manner (on a monthly basis);"),(0,n.kt)("li",{parentName:"ul"},"build analytical dashboard that will make it easy to discern the trends and digest the insights.")),(0,n.kt)("p",null,"The period of the data processing will cover from 2018 to 2020."),(0,n.kt)("h2",{id:"dataset"},"Dataset"),(0,n.kt)("p",null,"The initial data of Citi Bike Trip Histories could be found ",(0,n.kt)("a",{parentName:"p",href:"https://s3.amazonaws.com/tripdata/index.html"},"here")," in a compressed format.\nIt contains information about bikes sharing in different regions of New York."),(0,n.kt)("p",null,"The dataset includes the following columns:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Trip Duration"),(0,n.kt)("li",{parentName:"ul"},"Start Time and Date"),(0,n.kt)("li",{parentName:"ul"},"Stop Time and Date"),(0,n.kt)("li",{parentName:"ul"},"Start Station Name"),(0,n.kt)("li",{parentName:"ul"},"End Station Name"),(0,n.kt)("li",{parentName:"ul"},"Station ID"),(0,n.kt)("li",{parentName:"ul"},"Station Lat/Long"),(0,n.kt)("li",{parentName:"ul"},"Bike ID"),(0,n.kt)("li",{parentName:"ul"},"User Type (Customer = 24-hour pass or 3-day pass user; Subscriber = Annual Member)"),(0,n.kt)("li",{parentName:"ul"},"Gender (0=unknown; 1=male; 2=female)"),(0,n.kt)("li",{parentName:"ul"},"Year of Birth")),(0,n.kt)("h2",{id:"technologies"},"Technologies"),(0,n.kt)("p",null,"We are going to use the following technologies for this project:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Cloud: GCP",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Data Lake (DL): GCS"),(0,n.kt)("li",{parentName:"ul"},"Data Warehouse (DWH): BigQuery"))),(0,n.kt)("li",{parentName:"ul"},"Infrastructure as code (IaC): Terraform"),(0,n.kt)("li",{parentName:"ul"},"Workflow orchestration: Airflow"),(0,n.kt)("li",{parentName:"ul"},"Transforming data: DBT"),(0,n.kt)("li",{parentName:"ul"},"Data Visualization: Google Data Studio")),(0,n.kt)("h2",{id:"project-architecture"},"Project architecture"),(0,n.kt)("p",null,"The end-to-end data pipeline includes the next steps:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"downloading, processing and uploading of the initial dataset to a DL;"),(0,n.kt)("li",{parentName:"ul"},"moving the data from the lake to a DWH;"),(0,n.kt)("li",{parentName:"ul"},"transforming the data in the DWH and preparing it for the dashboard;"),(0,n.kt)("li",{parentName:"ul"},"dashboard creating.")),(0,n.kt)("h2",{id:"tutorial"},"Tutorial"),(0,n.kt)("p",null,"This tutorial contains the instructions you need to follow to reproduce the project results."),(0,n.kt)("h3",{id:"1-pre-requisites"},"1. Pre-requisites"),(0,n.kt)("p",null,"Make sure you have the following pre-installed components:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://cloud.google.com/"},"GCP account")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.terraform.io/downloads"},"Terraform")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://docs.docker.com/get-docker/"},"Docker"))),(0,n.kt)("h3",{id:"2-google-cloud-platform"},"2. Google Cloud Platform"),(0,n.kt)("p",null,"To set up GCP, please follow the steps below:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"If you don't have a GCP account, please create a free trial."),(0,n.kt)("li",{parentName:"ol"},"Setup new project and write down your Project ID."),(0,n.kt)("li",{parentName:"ol"},"Configure service account to get access to this project and download auth-keys (.json). Please check the service\naccount has all the permissions below:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Viewer"),(0,n.kt)("li",{parentName:"ul"},"Storage Admin"),(0,n.kt)("li",{parentName:"ul"},"Storage Object Admin"),(0,n.kt)("li",{parentName:"ul"},"BigQuery Admin"))),(0,n.kt)("li",{parentName:"ol"},"Download ",(0,n.kt)("a",{parentName:"li",href:"https://cloud.google.com/sdk"},"SDK")," for local setup."),(0,n.kt)("li",{parentName:"ol"},"Set environment variable to point to your downloaded auth-keys:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'export GOOGLE_APPLICATION_CREDENTIALS="<path/to/your/service-account-authkeys>.json"\n\n# Refresh token/session, and verify authentication\ngcloud auth application-default login\n')),(0,n.kt)("ol",{start:6},(0,n.kt)("li",{parentName:"ol"},"Enable the following options under the APIs and services section:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://console.cloud.google.com/apis/library/iam.googleapis.com"},"Identity and Access Management (IAM) API")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://console.cloud.google.com/apis/library/iamcredentials.googleapis.com"},"IAM service account credentials API")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://console.developers.google.com/apis/api/compute.googleapis.com"},"Compute Engine API")," (if you are going to use VM instance)")))),(0,n.kt)("h3",{id:"3-terraform"},"3. Terraform"),(0,n.kt)("p",null,"We use Terraform to build and manage GCP infrastructure. Terraform configuration files are located in the separate folder ",(0,n.kt)("inlineCode",{parentName:"p"},"terraform"),".\nThere are 3 configuration files:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"terraform-version")," - contains information about the installed version of Terraform;"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{target:"_blank",href:a(52054).Z},"variables.tf")," - contains variables to make your configuration more dynamic and flexible;"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{target:"_blank",href:a(12736).Z},"main.tf")," - is a key configuration file consisting of several sections.")),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/DataTalksClub/data-engineering-zoomcamp/blob/main/week_1_basics_n_setup/1_terraform_gcp/1_terraform_overview.md"},"Here")," you can find the detailed description of each section."),(0,n.kt)("p",null,"Now you can use the steps below to generate resources inside the GCP:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Move to the ",(0,n.kt)("a",{parentName:"li",href:"terraform"},"terraform folder")," using bash command ",(0,n.kt)("inlineCode",{parentName:"li"},"cd"),"."),(0,n.kt)("li",{parentName:"ol"},"Run ",(0,n.kt)("inlineCode",{parentName:"li"},"terraform init")," command to initialize the configuration."),(0,n.kt)("li",{parentName:"ol"},"Use ",(0,n.kt)("inlineCode",{parentName:"li"},"terraform plan")," to match previews local changes against a remote state."),(0,n.kt)("li",{parentName:"ol"},"Apply changes to the cloud with ",(0,n.kt)("inlineCode",{parentName:"li"},"terraform apply")," command.")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Note: In steps 3 and 4 Terraform may ask you to specify the Project ID. Please use the ID that you noted down\nearlier at the project setup stage.")),(0,n.kt)("p",null,"If you would like to remove your stack from the Cloud, use the ",(0,n.kt)("inlineCode",{parentName:"p"},"terraform destroy")," command."),(0,n.kt)("h3",{id:"4-airflow"},"4. Airflow"),(0,n.kt)("p",null,"The next steps provide you with the instructions of running Apache Airflow, which will allow you to run the entire\norchestration, taking into account that you have already set up a GCP account."),(0,n.kt)("p",null,"You can run Airflow locally using docker-compose. Before running it, please make sure you have at least 5 GB of free RAM.\nAlternatively, you can launch Airflow on a virtual machine in GCP (in this case, please refer to ",(0,n.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=ae-CV2KfoN0&list=PL3MmuxUbc_hJed7dXYoJw8DoCuVHhGEQb&index=16"},"this video"),")."),(0,n.kt)("h4",{id:"setup"},"Setup"),(0,n.kt)("p",null,"Go to the ",(0,n.kt)("inlineCode",{parentName:"p"},"airflow")," subdirectory: here you can find the ",(0,n.kt)("inlineCode",{parentName:"p"},"Dockerfile")," and the lightweight version\nof the ",(0,n.kt)("a",{target:"_blank",href:a(77246).Z},"docker-compose.yaml")," file that are required to run Airflow."),(0,n.kt)("p",null,"The lightweight version of docker-compose file contains the minimum required set of components to run data pipelines.\nThe only things you need to specify before launching it are your Project ID (",(0,n.kt)("inlineCode",{parentName:"p"},"GCP_PROJECT_ID"),") and Cloud Storage name (",(0,n.kt)("inlineCode",{parentName:"p"},"GCP_GCS_BUCKET"),")\nin the ",(0,n.kt)("a",{target:"_blank",href:a(77246).Z},"docker-compose.yaml"),". Please specify these variables according to your actual GCP setup."),(0,n.kt)("p",null,"You can easily run Airflow using the following commands:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"docker-compose build")," to build the image (takes ~15 mins for the first-time);"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"docker-compose up airflow-init")," to initialize the Airflow scheduler, DB and other stuff;"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"docker-compose up")," to kick up the all the services from the container.")),(0,n.kt)("p",null,"Now you can launch Airflow UI and run the DAGs."),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Note: If you want to stop Airflow, please type ",(0,n.kt)("inlineCode",{parentName:"p"},"docker-compose down")," command in your terminal.")),(0,n.kt)("h4",{id:"running-dags"},"Running DAGs"),(0,n.kt)("p",null,"Open the ",(0,n.kt)("a",{parentName:"p",href:"http://localhost:8080/"},"http://localhost:8080/")," address in your browser and login using ",(0,n.kt)("inlineCode",{parentName:"p"},"airflow")," username\nand ",(0,n.kt)("inlineCode",{parentName:"p"},"airflow")," password."),(0,n.kt)("p",null,"On the DAGs View page you can find three dags:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"data_ingestion_to_gcs_dag")," for downloading data from the source, unpacking and converting it to parquet format and\nfinally uploading it to the Cloud Storage."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"gcs_to_bq_dag")," to subsequently create an external and then optimized table in BigQuery from the data stored in GCS."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"data_transform_dag")," to prepare data for analytics.")),(0,n.kt)("p",null,"The first dag is scheduled to run every month, while the second one should be triggered manually. Therefore, you need\nto activate the ",(0,n.kt)("inlineCode",{parentName:"p"},"data_ingestion_to_gcs_dag")," dag first and wait for it to finish uploading data to GCS. And only after\nthat manually run the ",(0,n.kt)("inlineCode",{parentName:"p"},"gcs_to_bq_dag")," dag to create tables in DWH. Finally, you can trigger ",(0,n.kt)("inlineCode",{parentName:"p"},"data_transform_dag"),"."),(0,n.kt)("h3",{id:"5-dbt"},"5. DBT"),(0,n.kt)("p",null,"We are going to use ",(0,n.kt)("a",{parentName:"p",href:"https://www.getdbt.com/"},"dbt")," for data transformation in DWH and further analytics dashboard development."),(0,n.kt)("p",null,"First you will need to create a dbt Cloud account (if you don't already have one) using ",(0,n.kt)("a",{parentName:"p",href:"https://www.getdbt.com/signup/"},"this link"),"\nand connect to your BigQuery by following ",(0,n.kt)("a",{parentName:"p",href:"https://docs.getdbt.com/docs/dbt-cloud/cloud-configuring-dbt-cloud/cloud-setting-up-bigquery-oauth"},"these instructions"),".\nYou can find more detailed instructions ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/DataTalksClub/data-engineering-zoomcamp/blob/main/week_4_analytics_engineering/dbt_cloud_setup.md"},"here"),"."),(0,n.kt)("p",null,"Note that:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"you can fork or copy an existing dbt project located in the separate folder ",(0,n.kt)("inlineCode",{parentName:"li"},"dbt")," and use a link to the forked/copied version if necessary;"),(0,n.kt)("li",{parentName:"ul"},"you need to check that BigQuery already has areas (datasets) for staging and production dbt models (",(0,n.kt)("inlineCode",{parentName:"li"},"citibike_dev")," and ",(0,n.kt)("inlineCode",{parentName:"li"},"citibike_prod")," in our case);"),(0,n.kt)("li",{parentName:"ul"},"you should modify ",(0,n.kt)("a",{target:"_blank",href:a(35216).Z},"profiles.yaml")," file according to your dataset names and credentials.")),(0,n.kt)("h3",{id:"6-google-data-studio"},"6. Google Data Studio"),(0,n.kt)("p",null,"When the production models are ready, you can start building a dashboard."),(0,n.kt)("p",null,"The ",(0,n.kt)("a",{parentName:"p",href:"https://datastudio.google.com/s/u5AyaHHljbo"},"dashboard")," is built using Google Data Studio. The process of the such dashboard creating in Google Data Studio is described in detail in ",(0,n.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=39nLTs74A3E&list=PL3MmuxUbc_hJed7dXYoJw8DoCuVHhGEQb&index=43"},"this video"),"."),(0,n.kt)("p",null,"And the final dashboard includes the following diagrams:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Total trips count"),(0,n.kt)("li",{parentName:"ul"},"Average trips duration per month and year"),(0,n.kt)("li",{parentName:"ul"},"User type distribution"),(0,n.kt)("li",{parentName:"ul"},"Trips count per month and year"),(0,n.kt)("li",{parentName:"ul"},"Trips count by start station on the dynamic Google map")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Note: To build a Google map you need to create a new geo field ",(0,n.kt)("inlineCode",{parentName:"p"},"start_location")," based on ",(0,n.kt)("inlineCode",{parentName:"p"},"start_station_latitude")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"start_station_longitude")," parameters.")),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/55026550/161604025-3cacf391-ea00-485d-b42c-623ef363f7aa.png",alt:"Citibike-trips"})))}d.isMDXComponent=!0},77246:(e,t,a)=>{a.d(t,{Z:()=>o});const o=a.p+"assets/files/docker-compose-b730ff4715bee191cf1ffe8b15bf8fe9.yaml"},35216:(e,t,a)=>{a.d(t,{Z:()=>o});const o=a.p+"assets/files/profiles-33e4944c517f7abba9ec84bcf6e4df28.yml"},12736:(e,t,a)=>{a.d(t,{Z:()=>o});const o=a.p+"assets/files/main-c28753eb0b58feb54d2b63ed3834d15b.tf"},52054:(e,t,a)=>{a.d(t,{Z:()=>o});const o=a.p+"assets/files/variables-f5028cf2d74a0c74f9b8f39e3327c39f.tf"}}]);