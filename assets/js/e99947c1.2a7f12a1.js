"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[86331],{3905:(e,a,t)=>{t.d(a,{Zo:()=>d,kt:()=>m});var n=t(67294);function s(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?r(Object(t),!0).forEach((function(a){s(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,n,s=function(e,a){if(null==e)return{};var t,n,s={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||(s[t]=e[t]);return s}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var o=n.createContext({}),c=function(e){var a=n.useContext(o),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},d=function(e){var a=c(e.components);return n.createElement(o.Provider,{value:a},e.children)},p={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(e,a){var t=e.components,s=e.mdxType,r=e.originalType,o=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=c(t),m=s,k=u["".concat(o,".").concat(m)]||u[m]||p[m]||r;return t?n.createElement(k,l(l({ref:a},d),{},{components:t})):n.createElement(k,l({ref:a},d))}));function m(e,a){var t=arguments,s=a&&a.mdxType;if("string"==typeof e||s){var r=t.length,l=new Array(r);l[0]=u;var i={};for(var o in a)hasOwnProperty.call(a,o)&&(i[o]=a[o]);i.originalType=e,i.mdxType="string"==typeof e?e:s,l[1]=i;for(var c=2;c<r;c++)l[c]=t[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},97301:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var n=t(87462),s=(t(67294),t(3905));const r={title:"Cassandra Getting Started",description:"NoSQL data modeling and analysis with Apache Cassandra",tags:["cassandra","cql","keyspaces"]},l=void 0,i={unversionedId:"storage/lab-getting-started-with-cassandra/getting-started",id:"storage/lab-getting-started-with-cassandra/getting-started",title:"Cassandra Getting Started",description:"NoSQL data modeling and analysis with Apache Cassandra",source:"@site/docs/02-storage/lab-getting-started-with-cassandra/getting-started.md",sourceDirName:"02-storage/lab-getting-started-with-cassandra",slug:"/storage/lab-getting-started-with-cassandra/getting-started",permalink:"/docs/storage/lab-getting-started-with-cassandra/getting-started",draft:!1,tags:[{label:"cassandra",permalink:"/docs/tags/cassandra"},{label:"cql",permalink:"/docs/tags/cql"},{label:"keyspaces",permalink:"/docs/tags/keyspaces"}],version:"current",lastUpdatedBy:"sparsh",lastUpdatedAt:1681047270,formattedLastUpdatedAt:"Apr 9, 2023",frontMatter:{title:"Cassandra Getting Started",description:"NoSQL data modeling and analysis with Apache Cassandra",tags:["cassandra","cql","keyspaces"]},sidebar:"tutorialSidebar",previous:{title:"Working with Cassandra and CLI",permalink:"/docs/storage/lab-getting-started-with-cassandra/cassandra-cli"},next:{title:"Build a serverless transactional data lake with Apache Iceberg, Amazon EMR Serverless, and Amazon Athena",permalink:"/docs/storage/lab-glue-emr-iceberg-serverless-lakehouse/"}},o={},c=[{value:"Objective",id:"objective",level:2},{value:"Starting Cassandra",id:"starting-cassandra",level:2},{value:"Run server",id:"run-server",level:3},{value:"Activate CQL shell",id:"activate-cql-shell",level:3},{value:"CQL - Cassandra CLI",id:"cql---cassandra-cli",level:2},{value:"Create a keyspace",id:"create-a-keyspace",level:3},{value:"Set a working keyspace",id:"set-a-working-keyspace",level:3},{value:"Create a table",id:"create-a-table",level:3},{value:"Insert a row",id:"insert-a-row",level:3},{value:"Retrieve a row",id:"retrieve-a-row",level:3},{value:"Update a row",id:"update-a-row",level:3},{value:"Delete a row",id:"delete-a-row",level:3},{value:"Test Your Understanding",id:"test-your-understanding",level:2},{value:"Cassandra with Python",id:"cassandra-with-python",level:2},{value:"Solution",id:"solution",level:2}],d={toc:c};function p(e){let{components:a,...r}=e;return(0,s.kt)("wrapper",(0,n.Z)({},d,r,{components:a,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"objective"},"Objective"),(0,s.kt)("p",null,"NoSQL data modeling and analysis with Apache Cassandra"),(0,s.kt)("h2",{id:"starting-cassandra"},"Starting Cassandra"),(0,s.kt)("h3",{id:"run-server"},"Run server"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"cassandra -f")),(0,s.kt)("h3",{id:"activate-cql-shell"},"Activate CQL shell"),(0,s.kt)("p",null,"Run ",(0,s.kt)("inlineCode",{parentName:"p"},"cqlsh")),(0,s.kt)("h2",{id:"cql---cassandra-cli"},"CQL - Cassandra CLI"),(0,s.kt)("p",null,"We will learn the basics of Cassandra Query Language (CQL). We will first install the CLI and then connect to the Cassandra server. Then we will start creating keyspaces and tables and load data into those tables. Finally, we will apply CRUD operations and understand key concepts like primary key and partition key."),(0,s.kt)("h3",{id:"create-a-keyspace"},"Create a keyspace"),(0,s.kt)("p",null,'A keyspace is a namespace for a set of tables sharing a data replication strategy and some options. It is conceptually similar to a "database" in a relational database management system.'),(0,s.kt)("p",null,"Create the keyspace:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE KEYSPACE killr_video\nWITH replication = {\n  'class': 'SimpleStrategy', \n  'replication_factor': 1 }; \n")),(0,s.kt)("p",null,"Our keyspace name is killr_video. Any data in this keyspace will be replicated using replication strategy SimpleStrategy and replication factor 1 . In production, however, we strongly recommend multiple datacenters and at least three replicas per datacenter for higher availability."),(0,s.kt)("h3",{id:"set-a-working-keyspace"},"Set a working keyspace"),(0,s.kt)("p",null,"Many CQL statements work with tables, indexes and other objects defined within a specific keyspace. For example, to refer to a table, we have to either use a fully-qualified name consisting of a keyspace name and a table name, or set a working keyspace and simply refer to the table by its name. For convenience, we go with the second option."),(0,s.kt)("p",null,"Set the current working keyspace:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"USE killr_video;\n")),(0,s.kt)("h3",{id:"create-a-table"},"Create a table"),(0,s.kt)("p",null,"A Cassandra table has named columns with data types, rows with values, and a primary key to uniquely identify each row. As an example, let's create table users with four columns and primary key email ."),(0,s.kt)("p",null,"Create the table:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE users (\n  email TEXT PRIMARY KEY,\n  name TEXT,\n  age INT,\n  date_joined DATE\n);\n")),(0,s.kt)("p",null,"Example:"),(0,s.kt)("p",null,(0,s.kt)("img",{src:t(87429).Z,width:"1294",height:"501"})),(0,s.kt)("h3",{id:"insert-a-row"},"Insert a row"),(0,s.kt)("p",null,"Add the row into our table using the CQL INSERT statement:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"INSERT INTO users (email, name, age, date_joined) \nVALUES ('joe@datastax.com', 'Joe', 25, '2020-01-01');\n")),(0,s.kt)("p",null,"Insert another row into the table:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"INSERT INTO users (email, name, age, date_joined) \nVALUES ('jen@datastax.com', 'Jen', 27, '2020-01-01');\n")),(0,s.kt)("h3",{id:"retrieve-a-row"},"Retrieve a row"),(0,s.kt)("p",null,"Now, retrieve the row using the CQL SELECT statement:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM users\nWHERE email = 'joe@datastax.com';\n")),(0,s.kt)("p",null,"Retrieve a different row from the table:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM users\nWHERE email = 'jen@datastax.com';\n")),(0,s.kt)("h3",{id:"update-a-row"},"Update a row"),(0,s.kt)("p",null,"Next, update the row using the CQL UPDATE statement:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"UPDATE users SET name = 'Joseph' \nWHERE email = 'joe@datastax.com';\n\nSELECT * FROM users;\n")),(0,s.kt)("p",null,"Update another row in the table:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"UPDATE users SET name = 'Jennifer' \nWHERE email = 'jen@datastax.com';\n\nSELECT * FROM users;\n")),(0,s.kt)("h3",{id:"delete-a-row"},"Delete a row"),(0,s.kt)("p",null,"Finally, delete the row using the CQL DELETE statement:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"DELETE FROM users \nWHERE email = 'joe@datastax.com';\n\nSELECT * FROM users;\n")),(0,s.kt)("p",null,"Delete another row from the table:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"DELETE FROM users \nWHERE email = 'jen@datastax.com';\n\nSELECT * FROM users;\n")),(0,s.kt)("h2",{id:"test-your-understanding"},"Test Your Understanding"),(0,s.kt)("p",null,"Here is a short quiz for you."),(0,s.kt)("p",null,"Q1. Which CQL statement can be used to add rows into a table?"),(0,s.kt)("ul",{className:"contains-task-list"},(0,s.kt)("li",{parentName:"ul",className:"task-list-item"},(0,s.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","A. SELECT"),(0,s.kt)("li",{parentName:"ul",className:"task-list-item"},(0,s.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","B. DELETE"),(0,s.kt)("li",{parentName:"ul",className:"task-list-item"},(0,s.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","C. INSERT")),(0,s.kt)("details",null,(0,s.kt)("summary",null,"Show me the Answer! "),"C"),(0,s.kt)("br",null),(0,s.kt)("p",null,"Q2. Which CQL statement can be used to retrieve rows from a table?"),(0,s.kt)("ul",{className:"contains-task-list"},(0,s.kt)("li",{parentName:"ul",className:"task-list-item"},(0,s.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","A. SELECT"),(0,s.kt)("li",{parentName:"ul",className:"task-list-item"},(0,s.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","B. DELETE"),(0,s.kt)("li",{parentName:"ul",className:"task-list-item"},(0,s.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","C. INSERT")),(0,s.kt)("details",null,(0,s.kt)("summary",null,"Show me the Answer! "),"A"),(0,s.kt)("br",null),(0,s.kt)("p",null,"Q3. Which CQL statement can be used to remove rows from a table?"),(0,s.kt)("ul",{className:"contains-task-list"},(0,s.kt)("li",{parentName:"ul",className:"task-list-item"},(0,s.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","A. SELECT"),(0,s.kt)("li",{parentName:"ul",className:"task-list-item"},(0,s.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","B. DELETE"),(0,s.kt)("li",{parentName:"ul",className:"task-list-item"},(0,s.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","C. INSERT")),(0,s.kt)("details",null,(0,s.kt)("summary",null,"Show me the Answer! "),"B"),(0,s.kt)("br",null),(0,s.kt)("h2",{id:"cassandra-with-python"},"Cassandra with Python"),(0,s.kt)("p",null,"We will perform the same activities as we did in CLI lab but instead of CLI, we will use Python API."),(0,s.kt)("h2",{id:"solution"},"Solution"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},".\n\u251c\u2500\u2500 [8.4K]  1_keyspaces&table.ipynb\n\u251c\u2500\u2500 [3.8K]  1_keyspaces_tables.py\n\u251c\u2500\u2500 [7.6K]  2_keyspaces&table.ipynb\n\u251c\u2500\u2500 [2.4K]  2_queries.py\n\u251c\u2500\u2500 [2.7K]  3_clustering_key.py\n\u251c\u2500\u2500 [8.3K]  3_keyspaces&table.ipynb\n\u251c\u2500\u2500 [3.0K]  4_where_clause.py\n\u251c\u2500\u2500 [ 23K]  _cassandra-cli.mdx\n\u251c\u2500\u2500 [ 46K]  cassandra-beginners\n\u2502   \u251c\u2500\u2500 [2.0K]  01-sa-cassandra-python.ipynb\n\u2502   \u251c\u2500\u2500 [6.3K]  02-sa-create-table-in-cassandra.ipynb\n\u2502   \u251c\u2500\u2500 [ 12K]  03-sa-three-queries-three-tables.ipynb\n\u2502   \u251c\u2500\u2500 [9.9K]  04-sa-primary-key.ipynb\n\u2502   \u251c\u2500\u2500 [7.3K]  05-sa-clustering-column.ipynb\n\u2502   \u2514\u2500\u2500 [8.7K]  06-sa-using-the-where-clause.ipynb\n\u251c\u2500\u2500 [3.5K]  cqlsh_intro.cql\n\u251c\u2500\u2500 [119K]  killrvideo.png\n\u251c\u2500\u2500 [3.9K]  lab-28-cassandra-getting-started.md\n\u251c\u2500\u2500 [4.6K]  learning_cql_data_types.cql\n\u2514\u2500\u2500 [  49]  requirements.txt\n\n 237K used in 1 directory, 19 files\n")))}p.isMDXComponent=!0},87429:(e,a,t)=>{t.d(a,{Z:()=>n});const n=t.p+"assets/images/killrvideo-65f06e18132ae604e73396e98eb7f745.png"}}]);