"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[69180],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>u});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),s=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=s(e.components);return n.createElement(d.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=s(a),u=r,c=m["".concat(d,".").concat(u)]||m[u]||k[u]||l;return a?n.createElement(c,i(i({ref:t},p),{},{components:a})):n.createElement(c,i({ref:t},p))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=m;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},45335:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>k,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var n=a(87462),r=(a(67294),a(3905));const l={},i="Creating ETL Data Pipelines using Apache Airflow",o={unversionedId:"orchestration/airflow/lab-tolldata/README",id:"orchestration/airflow/lab-tolldata/README",title:"Creating ETL Data Pipelines using Apache Airflow",description:"Objective",source:"@site/docs/06-orchestration/airflow/lab-tolldata/README.md",sourceDirName:"06-orchestration/airflow/lab-tolldata",slug:"/orchestration/airflow/lab-tolldata/",permalink:"/docs/orchestration/airflow/lab-tolldata/",draft:!1,tags:[],version:"current",lastUpdatedBy:"sparsh",lastUpdatedAt:1681047270,formattedLastUpdatedAt:"Apr 9, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"IMDB data procesing and Airflow pipeline",permalink:"/docs/orchestration/airflow/lab-imdb-spark-etl/"},next:{title:"Spotify-Data-Engineering-and-Analysis",permalink:"/docs/orchestration/airflow/labdev-spotify/"}},d={},s=[{value:"Objective",id:"objective",level:2},{value:"Introduction",id:"introduction",level:2},{value:"Prepare the lab environment",id:"prepare-the-lab-environment",level:2},{value:"Exercise 1 - Create a DAG",id:"exercise-1---create-a-dag",level:2},{value:"Task 1.1 - Define DAG arguments",id:"task-11---define-dag-arguments",level:3},{value:"Task 1.2 - Define the DAG",id:"task-12---define-the-dag",level:3},{value:"Task 1.3 - Create a task to unzip data",id:"task-13---create-a-task-to-unzip-data",level:3},{value:"Task 1.4 - Create a task to extract data from csv file",id:"task-14---create-a-task-to-extract-data-from-csv-file",level:3},{value:"Task 1.5 - Create a task to extract data from tsv file",id:"task-15---create-a-task-to-extract-data-from-tsv-file",level:3},{value:"Task 1.6 - Create a task to extract data from fixed width file",id:"task-16---create-a-task-to-extract-data-from-fixed-width-file",level:3},{value:"Task 1.7 - Create a task to consolidate data extracted from previous tasks",id:"task-17---create-a-task-to-consolidate-data-extracted-from-previous-tasks",level:3},{value:"Task 1.8 - Transform and load the data",id:"task-18---transform-and-load-the-data",level:3},{value:"Task 1.9 - Define the task pipeline",id:"task-19---define-the-task-pipeline",level:3},{value:"Exercise 2 - Getting the DAG operational",id:"exercise-2---getting-the-dag-operational",level:2},{value:"Task 1.10 - Submit the DAG",id:"task-110---submit-the-dag",level:3},{value:"Task 1.11 - Unpause the DAG",id:"task-111---unpause-the-dag",level:3},{value:"Task 1.12 - Monitor the DAG",id:"task-112---monitor-the-dag",level:3}],p={toc:s};function k(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"creating-etl-data-pipelines-using-apache-airflow"},"Creating ETL Data Pipelines using Apache Airflow"),(0,r.kt)("h2",{id:"objective"},"Objective"),(0,r.kt)("p",null,"Creating ETL Data Pipelines using Apache Airflow"),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"You are a data engineer at a data analytics consulting company. You have been assigned to a project that aims to de-congest the national highways by analyzing the road traffic data from different toll plazas. Each highway is operated by a different toll operator with a different IT setup that uses different file formats. Your job is to collect data available in different formats and consolidate it into a single file."),(0,r.kt)("p",null,"In this assignment you will author an Apache Airflow DAG that will:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Extract data from a csv file"),(0,r.kt)("li",{parentName:"ul"},"Extract data from a tsv file"),(0,r.kt)("li",{parentName:"ul"},"Extract data from a fixed width file"),(0,r.kt)("li",{parentName:"ul"},"Transform the data"),(0,r.kt)("li",{parentName:"ul"},"Load the transformed data into the staging area")),(0,r.kt)("h2",{id:"prepare-the-lab-environment"},"Prepare the lab environment"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"cd airflow/dags\nmkdir finalassignment\ncd finalassignment\nmkdir staging\ncd staging\n")),(0,r.kt)("h2",{id:"exercise-1---create-a-dag"},"Exercise 1 - Create a DAG"),(0,r.kt)("h3",{id:"task-11---define-dag-arguments"},"Task 1.1 - Define DAG arguments"),(0,r.kt)("p",null,"Define the DAG arguments as per the following details:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"owner"),(0,r.kt)("td",{parentName:"tr",align:null},"< You may use any dummy name>")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"start_date"),(0,r.kt)("td",{parentName:"tr",align:null},"today")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"email"),(0,r.kt)("td",{parentName:"tr",align:null},"< You may use any dummy email>")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"email_on_failure"),(0,r.kt)("td",{parentName:"tr",align:null},"True")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"email_on_retry"),(0,r.kt)("td",{parentName:"tr",align:null},"True")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"retries"),(0,r.kt)("td",{parentName:"tr",align:null},"1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"retry_delay"),(0,r.kt)("td",{parentName:"tr",align:null},"5 minutes")))),(0,r.kt)("p",null,"Take a screenshot of the task code."),(0,r.kt)("p",null,"Name the screenshot\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"dag_args.jpg"),". (Images can be saved with either the .jpg or .png extension.)"),(0,r.kt)("h3",{id:"task-12---define-the-dag"},"Task 1.2 - Define the DAG"),(0,r.kt)("p",null,"Create a DAG as per the following details."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DAG id"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ETL_toll_data"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Schedule"),(0,r.kt)("td",{parentName:"tr",align:null},"Daily once")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"default_args"),(0,r.kt)("td",{parentName:"tr",align:null},"as you have defined in the previous step")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"description"),(0,r.kt)("td",{parentName:"tr",align:null},"Apache Airflow Final Assignment")))),(0,r.kt)("p",null,"Take a screenshot of the command you used and the output."),(0,r.kt)("p",null,"Name the screenshot\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"dag_definition.jpg"),". (Images can be saved with either the .jpg or .png extension.)"),(0,r.kt)("h3",{id:"task-13---create-a-task-to-unzip-data"},"Task 1.3 - Create a task to unzip data"),(0,r.kt)("p",null,"Create a task named\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"unzip_data"),"."),(0,r.kt)("p",null,"Use the compressed data file and uncompress it into the destination directory."),(0,r.kt)("p",null,"Take a screenshot of the task code."),(0,r.kt)("p",null,"Name the screenshot\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"unzip_data.jpg"),". (Images can be saved with either the .jpg or .png extension.)"),(0,r.kt)("p",null,"Read through the file\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"fileformats.txt"),"\xa0to understand the column details."),(0,r.kt)("h3",{id:"task-14---create-a-task-to-extract-data-from-csv-file"},"Task 1.4 - Create a task to extract data from csv file"),(0,r.kt)("p",null,"Create a task named\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"extract_data_from_csv"),"."),(0,r.kt)("p",null,"This task should extract the fields\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"Rowid"),",\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"Timestamp"),",\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"Anonymized Vehicle number"),", and\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"Vehicle type"),"\xa0from the\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"vehicle-data.csv"),"\xa0file and save them into a file named\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"csv_data.csv"),"."),(0,r.kt)("p",null,"Take a screenshot of the task code."),(0,r.kt)("p",null,"Name the screenshot\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"extract_data_from_csv.jpg"),". (Images can be saved with either the .jpg or .png extension.)"),(0,r.kt)("h3",{id:"task-15---create-a-task-to-extract-data-from-tsv-file"},"Task 1.5 - Create a task to extract data from tsv file"),(0,r.kt)("p",null,"Create a task named\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"extract_data_from_tsv"),"."),(0,r.kt)("p",null,"This task should extract the fields\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"Number of axles"),",\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"Tollplaza id"),", and\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"Tollplaza code"),"\xa0from the\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"tollplaza-data.tsv"),"\xa0file and save it into a file named\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"tsv_data.csv"),"."),(0,r.kt)("p",null,"Take a screenshot of the task code."),(0,r.kt)("p",null,"Name the screenshot\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"extract_data_from_tsv.jpg"),". (Images can be saved with either the .jpg or .png extension.)"),(0,r.kt)("h3",{id:"task-16---create-a-task-to-extract-data-from-fixed-width-file"},"Task 1.6 - Create a task to extract data from fixed width file"),(0,r.kt)("p",null,"Create a task named\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"extract_data_from_fixed_width"),"."),(0,r.kt)("p",null,"This task should extract the fields\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"Type of Payment code"),", and\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"Vehicle Code"),"\xa0from the fixed width file\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"payment-data.txt"),"\xa0and save it into a file named\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"fixed_width_data.csv"),"."),(0,r.kt)("p",null,"Take a screenshot of the task code."),(0,r.kt)("p",null,"Name the screenshot\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"extract_data_from_fixed_width.jpg"),". (Images can be saved with either the .jpg or .png extension.)"),(0,r.kt)("h3",{id:"task-17---create-a-task-to-consolidate-data-extracted-from-previous-tasks"},"Task 1.7 - Create a task to consolidate data extracted from previous tasks"),(0,r.kt)("p",null,"Create a task named\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"consolidate_data"),"."),(0,r.kt)("p",null,"This task should create a single csv file named\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"extracted_data.csv"),"\xa0by combining data from"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"csv_data.csv")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"tsv_data.csv")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"fixed_width_data.csv"))),(0,r.kt)("p",null,"The final csv file should use the fields in the order given below:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Rowid"),",\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"Timestamp"),",\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"Anonymized Vehicle number"),",\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"Vehicle type"),",\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"Number of axles"),",\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"Tollplaza id"),",\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"Tollplaza code"),",\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"Type of Payment code"),", and\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"Vehicle Code")),(0,r.kt)("p",null,"Hint: Use the bash\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"paste"),"\xa0command."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"paste"),"\xa0command merges lines of files."),(0,r.kt)("p",null,"Example :\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"paste file1 file2 > newfile")),(0,r.kt)("p",null,"The above command merges the columns of the files file1 and file2 and sends the output to newfile."),(0,r.kt)("p",null,"You can use the command\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"man paste"),"\xa0to explore more."),(0,r.kt)("p",null,"Take a screenshot of the command you used and the output."),(0,r.kt)("p",null,"Name the screenshot\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"consolidate_data.jpg"),". (Images can be saved with either the .jpg or .png extension.)"),(0,r.kt)("h3",{id:"task-18---transform-and-load-the-data"},"Task 1.8 - Transform and load the data"),(0,r.kt)("p",null,"Create a task named\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"transform_data"),"."),(0,r.kt)("p",null,"This task should transform the vehicle_type field in\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"extracted_data.csv"),"\xa0into capital letters and save it into a file named\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"transformed_data.csv"),"\xa0in the staging directory."),(0,r.kt)("p",null,"Take a screenshot of the command you used and the output."),(0,r.kt)("p",null,"Name the screenshot\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"transform.jpg"),". (Images can be saved with either the .jpg or .png extension.)"),(0,r.kt)("h3",{id:"task-19---define-the-task-pipeline"},"Task 1.9 - Define the task pipeline"),(0,r.kt)("p",null,"Define the task pipeline as per the details given below:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Task"),(0,r.kt)("th",{parentName:"tr",align:null},"Functionality"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"First task"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"unzip_data"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Second task"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"extract_data_from_csv"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Third task"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"extract_data_from_tsv"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Fourth task"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"extract_data_from_fixed_width"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Fifth task"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"consolidate_data"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Sixth task"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"transform_data"))))),(0,r.kt)("p",null,"Take a screenshot of the task pipeline section of the DAG."),(0,r.kt)("p",null,"Name the screenshot\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"task_pipeline.jpg"),". (Images can be saved with either the .jpg or .png extension.)"),(0,r.kt)("h2",{id:"exercise-2---getting-the-dag-operational"},"Exercise 2 - Getting the DAG operational"),(0,r.kt)("p",null,"Save the DAG you defined into a file named\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"ETL_toll_data.py"),"."),(0,r.kt)("h3",{id:"task-110---submit-the-dag"},"Task 1.10 - Submit the DAG"),(0,r.kt)("p",null,"Take a screenshot of the command you used and the output."),(0,r.kt)("p",null,"Name the screenshot\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"submit_dag.jpg"),". (Images can be saved with either the .jpg or .png extension.)"),(0,r.kt)("h3",{id:"task-111---unpause-the-dag"},"Task 1.11 - Unpause the DAG"),(0,r.kt)("p",null,"Take a screenshot of the command you used and the output."),(0,r.kt)("p",null,"Name the screenshot\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"unpause_dag.jpg"),". (Images can be saved with either the .jpg or .png extension.)"),(0,r.kt)("h3",{id:"task-112---monitor-the-dag"},"Task 1.12 - Monitor the DAG"),(0,r.kt)("p",null,"Take a screenshot of the DAG runs for the Airflow console."),(0,r.kt)("p",null,"Name the screenshot\xa0",(0,r.kt)("inlineCode",{parentName:"p"},"dag_runs.jpg"),". (Images can be saved with either the .jpg or .png extension.)"),(0,r.kt)("p",null,"This concludes the assignment."))}k.isMDXComponent=!0}}]);