"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[79041],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>u});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),i=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=i(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),m=i(n),u=a,f=m["".concat(l,".").concat(u)]||m[u]||p[u]||s;return n?r.createElement(f,o(o({ref:t},d),{},{components:n})):r.createElement(f,o({ref:t},d))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var i=2;i<s;i++)o[i]=n[i];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},65755:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>c,toc:()=>i});var r=n(87462),a=(n(67294),n(3905));const s={},o="MySQL",c={unversionedId:"storage/mysql",id:"storage/mysql",title:"MySQL",description:"",source:"@site/docs/02-storage/mysql.md",sourceDirName:"02-storage",slug:"/storage/mysql",permalink:"/docs/storage/mysql",draft:!1,tags:[],version:"current",lastUpdatedBy:"sparsh",lastUpdatedAt:1681047270,formattedLastUpdatedAt:"Apr 9, 2023",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"MongoDB",permalink:"/docs/storage/mongodb"},next:{title:"ORC",permalink:"/docs/storage/orc"}},l={},i=[],d={toc:i};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"mysql"},"MySQL"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Makefile"},'start:\n    start_mysql\n\nconnect:\n    mysql --host=<hostname> --port=3306  --user=<username> --password\n\ncreate_database:\n    create database <dbname>;\n\ncreate_table:\n    create table mytbl(ts datetime, vid int, type char(15), pid smallint);\n\ndisconnect:\n    exit\n\ncreate_dump:\n    mysqldump --host=<hostname> --port=3306  --user=<username> --password <database_name> <table_name> > data-to-be-loaded.sql\n\nrestore_dump:\n    source data-to-be-loaded.sql;\n    mysql --host=<hostname> --port=3306  --user=<username> --password <database_name> < data-to-be-loaded.sql\n\nshow_tables:\n    SHOW FULL TABLES WHERE table_type = \'BASE TABLE\';\n\ndescribe_table:\n    describe <table_name>\n\nconnect_python:\n    import boto3\n    import json\n    def get_secret(secret_name, region_name="us-east-1"):\n        session = boto3.session.Session()\n        client = session.client(\n            service_name=\'secretsmanager\',\n            region_name=region_name)\n        get_secret_value_response = client.get_secret_value(SecretId=secret_name)\n        get_secret_value_response = json.loads(get_secret_value_response[\'SecretString\'])\n        return get_secret_value_response\n    creds = get_secret("wysde")\n    USERNAME = creds["RDS_MYSQL_USERNAME"]\n    PASSWORD = creds["RDS_MYSQL_PASSWORD"]\n    HOST = creds["RDS_MYSQL_HOST"]\n    DATABASE = \'sparsh\'\n    conn_str = \'mysql+mysqlconnector://{0}:{1}@{2}/{3}\'.format(USERNAME, PASSWORD, HOST, DATABASE)\n    %config SqlMagic.autopandas=True\n    %config SqlMagic.displaycon=False\n    %config SqlMagic.feedback=False\n    %config SqlMagic.displaylimit=5\n    %reload_ext sql\n    %sql {conn_str}\n\nddl_ingest_python:\n    TABLE = "table_to_be_loaded"\n    df = pd.read_csv(f"./data/{TABLE}.csv")\n    print(pd.io.sql.get_schema(df, name=TABLE, con=conn))\n    df.to_csv(f"./data/{TABLE}.csv", index=False)\n    echo mysqlimport --local \\\n        --compress \\\n        --user={USERNAME} \\\n        --password \\\n        --host={HOST} \\\n        --ignore-lines=1 \\\n        --fields-terminated-by=\\\',\\\' {DATABASE} data/{TABLE}.csv\n')))}p.isMDXComponent=!0}}]);