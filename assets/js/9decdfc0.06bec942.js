"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[79617],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>m});var r=a(67294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,o=function(e,t){if(null==e)return{};var a,r,o={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var l=r.createContext({}),p=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,o=e.mdxType,n=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(a),m=o,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||n;return a?r.createElement(f,s(s({ref:t},c),{},{components:a})):r.createElement(f,s({ref:t},c))}));function m(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=a.length,s=new Array(n);s[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var p=2;p<n;p++)s[p]=a[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},9427:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>n,metadata:()=>i,toc:()=>p});var r=a(87462),o=(a(67294),a(3905));const n={},s="Avro",i={unversionedId:"storage/avro",id:"storage/avro",title:"Avro",description:"Avro is a row-oriented data format designed for RPCs and data serialization. Avro encodes data into a binary format, with schema metadata specified in JSON. Avro is popular in the Hadoop ecosystem and is also supported by various cloud data tools.",source:"@site/docs/02-storage/avro.md",sourceDirName:"02-storage",slug:"/storage/avro",permalink:"/docs/storage/avro",draft:!1,tags:[],version:"current",lastUpdatedBy:"sparsh",lastUpdatedAt:1681047270,formattedLastUpdatedAt:"Apr 9, 2023",frontMatter:{},sidebar:"docs",previous:{title:"JSON and JSONL",permalink:"/docs/storage/json"},next:{title:"Parquet",permalink:"/docs/storage/parquet"}},l={},p=[],c={toc:p};function d(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"avro"},"Avro"),(0,o.kt)("p",null,"Avro is a row-oriented data format designed for RPCs and data serialization. Avro encodes data into a binary format, with schema metadata specified in JSON. Avro is popular in the Hadoop ecosystem and is also supported by various cloud data tools."),(0,o.kt)("p",null,"Avro is a data serialization system that was developed by Apache Software Foundation in 2009. It is a row-based format that is designed to be fast, compact, and extensible. Avro is often used in Hadoop-based big data processing systems like Hive and HBase, as well as in other distributed systems like Kafka and Cassandra."),(0,o.kt)("p",null,"Advantages:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Compact format:\xa0Avro is a compact format that uses binary encoding to reduce storage requirements and improve performance. This makes it ideal for use cases where storage and performance are critical."),(0,o.kt)("li",{parentName:"ul"},"Schema evolution:\xa0Avro supports schema evolution, which means that you can add, remove, or modify fields without breaking compatibility with existing data. This makes it easy to update data models over time."),(0,o.kt)("li",{parentName:"ul"},"Dynamic typing:\xa0Avro supports dynamic typing, which means that you can change the data type of a field at runtime. This makes it easier to handle changes to data models and to work with data from multiple sources."),(0,o.kt)("li",{parentName:"ul"},"Language-agnostic:\xa0Avro is designed to be language-agnostic, which means that it can be used with a variety of programming languages.")),(0,o.kt)("p",null,"Disadvantages:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Lack of built-in compression:\xa0Unlike some other big data file formats, Avro does not include built-in compression. This means that you'll need to use external compression libraries to compress data."),(0,o.kt)("li",{parentName:"ul"},"Slower performance than columnar storage:\xa0Avro's row-based storage format can be slower than columnar storage formats like Parquet for analytical queries that involve reading only a subset of columns."),(0,o.kt)("li",{parentName:"ul"},"No support for indexing:")),(0,o.kt)("p",null,"Applications:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Distributed computing:\xa0Avro is often used in distributed computing environments such as Apache Hadoop, where it is used to serialize data for use in MapReduce jobs."),(0,o.kt)("li",{parentName:"ol"},"Data storage:\xa0Avro is often used as a data storage format for log files, message queues, and other data sources."),(0,o.kt)("li",{parentName:"ol"},"High-throughput systems:\xa0Avro's compactness and support for compression make it ideal for use in high-throughput systems such as web applications and real-time data processing pipelines.")),(0,o.kt)("p",null,"Example of Avro data and schema:"),(0,o.kt)("p",null,"Avro Data"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'{\n  "name": "John",\n  "age": 30,\n  "email": "john@example.com"\n}\n')),(0,o.kt)("p",null,"Avro Schema"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'{\n  "type": "record",\n  "name": "Person",\n  "namespace": "example.avro",\n  "fields": [\n    {"name": "name", "type": "string"},\n    {"name": "age", "type": "int"},\n    {"name": "email", "type": "string"}\n  ]\n}\n')))}d.isMDXComponent=!0}}]);